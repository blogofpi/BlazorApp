/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/bootstrap@4.3.1/js/src/button.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import $ from"jquery";const NAME="button",VERSION="4.3.1",DATA_KEY="bs.button",EVENT_KEY=`.${DATA_KEY}`,DATA_API_KEY=".data-api",JQUERY_NO_CONFLICT=$.fn[NAME],ClassName={ACTIVE:"active",BUTTON:"btn",FOCUS:"focus"},Selector={DATA_TOGGLE_CARROT:'[data-toggle^="button"]',DATA_TOGGLE:'[data-toggle="buttons"]',INPUT:'input:not([type="hidden"])',ACTIVE:".active",BUTTON:".btn"},Event={CLICK_DATA_API:`click${EVENT_KEY}.data-api`,FOCUS_BLUR_DATA_API:`focus${EVENT_KEY}.data-api `+`blur${EVENT_KEY}.data-api`};class Button{constructor(t){this._element=t}static get VERSION(){return VERSION}toggle(){let t=!0,e=!0;const s=$(this._element).closest(Selector.DATA_TOGGLE)[0];if(s){const a=this._element.querySelector(Selector.INPUT);if(a){if("radio"===a.type)if(a.checked&&this._element.classList.contains(ClassName.ACTIVE))t=!1;else{const t=s.querySelector(Selector.ACTIVE);t&&$(t).removeClass(ClassName.ACTIVE)}if(t){if(a.hasAttribute("disabled")||s.hasAttribute("disabled")||a.classList.contains("disabled")||s.classList.contains("disabled"))return;a.checked=!this._element.classList.contains(ClassName.ACTIVE),$(a).trigger("change")}a.focus(),e=!1}}e&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(ClassName.ACTIVE)),t&&$(this._element).toggleClass(ClassName.ACTIVE)}dispose(){$.removeData(this._element,DATA_KEY),this._element=null}static _jQueryInterface(t){return this.each(function(){let e=$(this).data(DATA_KEY);e||(e=new Button(this),$(this).data(DATA_KEY,e)),"toggle"===t&&e[t]()})}}$(document).on(Event.CLICK_DATA_API,Selector.DATA_TOGGLE_CARROT,t=>{t.preventDefault();let e=t.target;$(e).hasClass(ClassName.BUTTON)||(e=$(e).closest(Selector.BUTTON)),Button._jQueryInterface.call($(e),"toggle")}).on(Event.FOCUS_BLUR_DATA_API,Selector.DATA_TOGGLE_CARROT,t=>{const e=$(t.target).closest(Selector.BUTTON)[0];$(e).toggleClass(ClassName.FOCUS,/^focus(in)?$/.test(t.type))}),$.fn[NAME]=Button._jQueryInterface,$.fn[NAME].Constructor=Button,$.fn[NAME].noConflict=(()=>($.fn[NAME]=JQUERY_NO_CONFLICT,Button._jQueryInterface));export default Button;
//# sourceMappingURL=/sm/e620c39304dc808a3d404560607028ce927333084afe2b96e96801319769890e.map