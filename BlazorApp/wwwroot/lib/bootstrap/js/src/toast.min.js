/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/bootstrap@4.3.1/js/src/toast.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import $ from"jquery";import Util from"./util";const NAME="toast",VERSION="4.3.1",DATA_KEY="bs.toast",EVENT_KEY=`.${DATA_KEY}`,JQUERY_NO_CONFLICT=$.fn[NAME],Event={CLICK_DISMISS:`click.dismiss${EVENT_KEY}`,HIDE:`hide${EVENT_KEY}`,HIDDEN:`hidden${EVENT_KEY}`,SHOW:`show${EVENT_KEY}`,SHOWN:`shown${EVENT_KEY}`},ClassName={FADE:"fade",HIDE:"hide",SHOW:"show",SHOWING:"showing"},DefaultType={animation:"boolean",autohide:"boolean",delay:"number"},Default={animation:!0,autohide:!0,delay:500},Selector={DATA_DISMISS:'[data-dismiss="toast"]'};class Toast{constructor(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}static get VERSION(){return VERSION}static get DefaultType(){return DefaultType}static get Default(){return Default}show(){$(this._element).trigger(Event.SHOW),this._config.animation&&this._element.classList.add(ClassName.FADE);const t=()=>{this._element.classList.remove(ClassName.SHOWING),this._element.classList.add(ClassName.SHOW),$(this._element).trigger(Event.SHOWN),this._config.autohide&&this.hide()};if(this._element.classList.remove(ClassName.HIDE),this._element.classList.add(ClassName.SHOWING),this._config.animation){const e=Util.getTransitionDurationFromElement(this._element);$(this._element).one(Util.TRANSITION_END,t).emulateTransitionEnd(e)}else t()}hide(t){this._element.classList.contains(ClassName.SHOW)&&($(this._element).trigger(Event.HIDE),t?this._close():this._timeout=setTimeout(()=>{this._close()},this._config.delay))}dispose(){clearTimeout(this._timeout),this._timeout=null,this._element.classList.contains(ClassName.SHOW)&&this._element.classList.remove(ClassName.SHOW),$(this._element).off(Event.CLICK_DISMISS),$.removeData(this._element,DATA_KEY),this._element=null,this._config=null}_getConfig(t){return t={...Default,...$(this._element).data(),..."object"==typeof t&&t?t:{}},Util.typeCheckConfig(NAME,t,this.constructor.DefaultType),t}_setListeners(){$(this._element).on(Event.CLICK_DISMISS,Selector.DATA_DISMISS,()=>this.hide(!0))}_close(){const t=()=>{this._element.classList.add(ClassName.HIDE),$(this._element).trigger(Event.HIDDEN)};if(this._element.classList.remove(ClassName.SHOW),this._config.animation){const e=Util.getTransitionDurationFromElement(this._element);$(this._element).one(Util.TRANSITION_END,t).emulateTransitionEnd(e)}else t()}static _jQueryInterface(t){return this.each(function(){const e=$(this);let s=e.data(DATA_KEY);if(s||(s=new Toast(this,"object"==typeof t&&t),e.data(DATA_KEY,s)),"string"==typeof t){if(void 0===s[t])throw new TypeError(`No method named "${t}"`);s[t](this)}})}}$.fn[NAME]=Toast._jQueryInterface,$.fn[NAME].Constructor=Toast,$.fn[NAME].noConflict=(()=>($.fn[NAME]=JQUERY_NO_CONFLICT,Toast._jQueryInterface));export default Toast;
//# sourceMappingURL=/sm/dbaa9a75c052b05bda3ec7524028d200dcc4bae6461259cfa91195a49e3e5cbc.map